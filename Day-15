#include <iostream>
#include <unordered_map>
#include <vector>

using namespace std;

int findMaxLength(vector<int>& nums) 
{
    int max_len = 0;
    int sum = 0;
    unordered_map<int, int> sum_to_index;
    sum_to_index[0] = -1; 

    for (int i = 0; i < nums.size(); ++i) 
   {
        sum += nums[i];

        if (sum_to_index.find(sum) != sum_to_index.end()) 
        {
            max_len = max(max_len, i - sum_to_index[sum]);
        } else 
         {
            sum_to_index[sum] = i;
         }
    }

    return max_len;
}

int main() 
{
    vector<int> array = {15, -2, 2, -8, 1, 7, 10, 23};
    int result = findMaxLength(array);
    cout << "Length of largest subarray with sum 0: " << result << endl;

    return 0;
}


